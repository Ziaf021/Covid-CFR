function y = lsq_pred_deaths (prm)
data=load('Data_17Apr.mat');


country_name='Sweden';

p.obs_cases= data.cases_world{:, country_name};

p.obs_deaths= ydata; %data.deaths_world{:, country_name};

p.sampling_time_len=15;
p.sampling_window= flip(0:1:p.sampling_time_len);
p.date_time = data.cases_world.date(end-p.sampling_window);


r =  prm(1);%
s = prm(2);%
p.mu_D = log(r / sqrt(1 + s^2/r^2));
p.sigma_D = sqrt(log(1+s^2/r^2));

%mu_D = log(prm_vec(1)/ sqrt(1 + prm_vec(2)^2/prm_vec(1)^2));
%sigma_D = sqrt(log(1+prm_vec(2)^2/prm_vec(1)^2));


%dths_vec=zeros(1,p.sampling_time_len+1);

dths_vec=[];
%conditional_prob_dead = @(t, x(1), x(2)) arrayfun(@(t)integral(@(s)lognpdf(s, x(1), x(2)), 0, t), t);

conditional_prob_dead = @(t, a, b) arrayfun(@(t)integral(@(s)lognpdf(s, a, b), 0, t), t);

for my_window = p.sampling_window

    deaths = cumsum(p.obs_deaths(1:end-my_window));

    country_allcases= p.obs_cases;
    
    cases_current_window =country_allcases(1:end-my_window);
    
   
    
    % calculate the prob
    prob_of_death= conditional_prob_dead([length(cases_current_window)-1:-1:0], p.mu_D,p.sigma_D);
    
        
   potential_dead = sum(prob_of_death.* cases_current_window');
   
   
   if potential_dead == 0
        cfr=0; 
   
    else
      
    cfr = deaths(end) / potential_dead;
    
    end
   %size(cases_current_window(end))
   dths_vec(end+1)=cfr*cases_current_window(end);
   
end
   

y= round(dths_vec)';

%y =sum((prd_deaths - p.obs_deaths(end-p.sampling_window)).^2);


end