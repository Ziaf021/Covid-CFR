function y = cfr_pred_deaths (p1,p2)

data=load('Data_tillApr17.mat');
country_name='Sweden';

obs_cases= data.p.cases_world{:, country_name};

obs_deaths= data.p.deaths_world{:, country_name};

sampling_time_len=15;
sampling_window= flip(0:1:sampling_time_len);
date_time = data.cases_world.date(end-sampling_window);
r =  p1;%
s = p2;%
mu_D = log(r / sqrt(1 + s^2/r^2))
sigma_D = sqrt(log(1+s^2/r^2))


dths_vec=[];
%conditional_prob_dead = @(t, x(1), x(2)) arrayfun(@(t)integral(@(s)lognpdf(s, x(1), x(2)), 0, t), t);

conditional_prob_dead = @(t, a, b) arrayfun(@(t)integral(@(s)lognpdf(s, a, b), 0, t), t);

for my_window = sampling_window

    deaths = cumsum(obs_deaths(1:end-my_window));

    country_allcases= obs_cases;
    
    cases_current_window =country_allcases(1:end-my_window);
    
   
  
    prob_of_death= conditional_prob_dead([length(cases_current_window)-1:-1:0], mu_D,sigma_D);
    
        
   potential_dead = sum(prob_of_death.* cases_current_window');
   
   
   if potential_dead == 0
        cfr=0; 
   
    else
      
    cfr = deaths(end) / potential_dead;
    
    end
   %size(cases_current_window(end))
   dths_vec(end+1)=cfr*cases_current_window(end);
   
end
   

prd_deaths= round(dths_vec)';

y =sum((prd_deaths - obs_deaths(end-sampling_window)).^2);


end